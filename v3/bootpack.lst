     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_hankaku
     7 00000000                                 	EXTERN	_init_palette
     8 00000000                                 	EXTERN	_init_screen
     9 00000000                                 	EXTERN	_memMan_init
    10 00000000                                 	EXTERN	_sprintf
    11 00000000                                 	EXTERN	_putFonts8
    12 00000000                                 	EXTERN	_memory_alloc
    13 00000000                                 	EXTERN	_memMan_rest
    14 00000000                                 	EXTERN	_io_hlt
    15 00000000                                 [FILE "bootpack.c"]
    16 00000000                                 	GLOBAL	_memMan
    17                                          [SECTION .data]
    18 00000000                                 	ALIGNB	4
    19 00000000                                 _memMan:
    20 00000000 003C0000                        	DD	3932160
    21 00000004                                 LC0:
    22 00000004 73 63 72 65 65 6E 3A 20 25 64   	DB	"screen: %d x %d",0x00
       0000000E 20 78 20 25 64 00 
    23 00000014                                 LC1:
    24 00000014 6D 65 6D 6F 72 79 3A 20 25 64   	DB	"memory: %dMB total, %dMB free",0x00
       0000001E 4D 42 20 74 6F 74 61 6C 2C 20 
       00000028 25 64 4D 42 20 66 72 65 65 00 
    25                                          [SECTION .text]
    26 00000000                                 	GLOBAL	_HariMain
    27 00000000                                 _HariMain:
    28 00000000 55                              	PUSH	EBP
    29 00000001 89 E5                           	MOV	EBP,ESP
    30 00000003 83 EC 58                        	SUB	ESP,88
    31 00000006 C7 45 F4 [00000000]             	MOV	DWORD [-12+EBP],_hankaku
    32 0000000D C7 45 F0 00000FF0               	MOV	DWORD [-16+EBP],4080
    33 00000014 C7 45 EC [00000040]             	MOV	DWORD [-20+EBP],__screen
    34 0000001B 8B 55 EC                        	MOV	EDX,DWORD [-20+EBP]
    35 0000001E 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
    36 00000021 8B 40 08                        	MOV	EAX,DWORD [8+EAX]
    37 00000024 89 42 08                        	MOV	DWORD [8+EDX],EAX
    38 00000027 8B 55 EC                        	MOV	EDX,DWORD [-20+EBP]
    39 0000002A 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
    40 0000002D 0F BF 40 04                     	MOVSX	EAX,WORD [4+EAX]
    41 00000031 89 02                           	MOV	DWORD [EDX],EAX
    42 00000033 8B 55 EC                        	MOV	EDX,DWORD [-20+EBP]
    43 00000036 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
    44 00000039 0F BF 40 06                     	MOVSX	EAX,WORD [6+EAX]
    45 0000003D 89 42 04                        	MOV	DWORD [4+EDX],EAX
    46 00000040 E8 [00000000]                   	CALL	_init_palette
    47 00000045 83 EC 0C                        	SUB	ESP,12
    48 00000048 FF 75 EC                        	PUSH	DWORD [-20+EBP]
    49 0000004B E8 [00000000]                   	CALL	_init_screen
    50 00000050 83 C4 10                        	ADD	ESP,16
    51 00000053 89 45 E8                        	MOV	DWORD [-24+EBP],EAX
    52 00000056 83 EC 04                        	SUB	ESP,4
    53 00000059 68 BFFFFFFF                     	PUSH	-1073741825
    54 0000005E 68 00400000                     	PUSH	4194304
    55 00000063 FF 35 [00000000]                	PUSH	DWORD [_memMan]
    56 00000069 E8 [00000000]                   	CALL	_memMan_init
    57 0000006E 83 C4 10                        	ADD	ESP,16
    58 00000071 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
    59 00000074 FF 70 04                        	PUSH	DWORD [4+EAX]
    60 00000077 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
    61 0000007A FF 30                           	PUSH	DWORD [EAX]
    62 0000007C 68 [00000004]                   	PUSH	LC0
    63 00000081 8D 45 B8                        	LEA	EAX,DWORD [-72+EBP]
    64 00000084 50                              	PUSH	EAX
    65 00000085 E8 [00000000]                   	CALL	_sprintf
    66 0000008A 83 C4 10                        	ADD	ESP,16
    67 0000008D 83 EC 08                        	SUB	ESP,8
    68 00000090 FF 75 F4                        	PUSH	DWORD [-12+EBP]
    69 00000093 8D 45 B8                        	LEA	EAX,DWORD [-72+EBP]
    70 00000096 50                              	PUSH	EAX
    71 00000097 6A 0A                           	PUSH	10
    72 00000099 6A 08                           	PUSH	8
    73 0000009B 6A 07                           	PUSH	7
    74 0000009D FF 75 E8                        	PUSH	DWORD [-24+EBP]
    75 000000A0 E8 [00000000]                   	CALL	_putFonts8
    76 000000A5 83 C4 20                        	ADD	ESP,32
    77 000000A8 83 EC 08                        	SUB	ESP,8
    78 000000AB 68 00A00000                     	PUSH	10485760
    79 000000B0 FF 35 [00000000]                	PUSH	DWORD [_memMan]
    80 000000B6 E8 [00000000]                   	CALL	_memory_alloc
    81 000000BB 83 C4 10                        	ADD	ESP,16
    82 000000BE 89 45 B4                        	MOV	DWORD [-76+EBP],EAX
    83 000000C1 83 EC 0C                        	SUB	ESP,12
    84 000000C4 FF 35 [00000000]                	PUSH	DWORD [_memMan]
    85 000000CA E8 [00000000]                   	CALL	_memMan_rest
    86 000000CF 83 C4 10                        	ADD	ESP,16
    87 000000D2 C1 E8 14                        	SHR	EAX,20
    88 000000D5 50                              	PUSH	EAX
    89 000000D6 A1 [00000000]                   	MOV	EAX,DWORD [_memMan]
    90 000000DB 8B 40 04                        	MOV	EAX,DWORD [4+EAX]
    91 000000DE C1 E8 14                        	SHR	EAX,20
    92 000000E1 50                              	PUSH	EAX
    93 000000E2 68 [00000014]                   	PUSH	LC1
    94 000000E7 8D 45 B8                        	LEA	EAX,DWORD [-72+EBP]
    95 000000EA 50                              	PUSH	EAX
    96 000000EB E8 [00000000]                   	CALL	_sprintf
    97 000000F0 83 C4 10                        	ADD	ESP,16
    98 000000F3 83 EC 08                        	SUB	ESP,8
    99 000000F6 FF 75 F4                        	PUSH	DWORD [-12+EBP]
   100 000000F9 8D 45 B8                        	LEA	EAX,DWORD [-72+EBP]
   101 000000FC 50                              	PUSH	EAX
   102 000000FD 6A 1E                           	PUSH	30
   103 000000FF 6A 08                           	PUSH	8
   104 00000101 6A 07                           	PUSH	7
   105 00000103 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   106 00000106 E8 [00000000]                   	CALL	_putFonts8
   107 0000010B 83 C4 20                        	ADD	ESP,32
   108 0000010E                                 L2:
   109 0000010E E8 [00000000]                   	CALL	_io_hlt
   110 00000113 EB F9                           	JMP	L2
   111 00000115                                 	GLOBAL	__screen
   112                                          [SECTION .data]
   113 00000032 00 00 00 00 00 00 00 00 00 00   	ALIGNB	16
       0000003C 00 00 00 00 
   114 00000040                                 __screen:
   115 00000040 00 00 00 00 00 00 00 00 00 00   	RESB	36
       0000004A 00 00 00 00 00 00 00 00 00 00 
       00000054 00 00 00 00 00 00 00 00 00 00 
       0000005E 00 00 00 00 00 00 
